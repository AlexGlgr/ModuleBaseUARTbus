class ClassBaseUARTBus{constructor(){if(this.Instance)return this.Instance;ClassBaseUARTBus.prototype.Instance=this,this.UARTbus={},this.Pattern="UART",this.IndexBus=10,this.Init()}Init(){let i=1,StrUart=this.Pattern+i;for(;!eval("typeof "+StrUart+" === 'undefined'");)eval(StrUart+" instanceof Serial")&&(this.UARTbus[StrUart]={IDbus:eval(StrUart),Used:!1}),i++,StrUart=this.Pattern+i}AddBus(_opt){if(void 0===_opt.rx||void 0===_opt.tx||void 0===_opt.baud)throw new err("Test",10);if(!(_opt.sda instanceof Pin&&_opt.scl instanceof Pin&&Number.isInteger(_opt.baud)))throw new err("Test",20);let bus_name=this.Pattern+this.IndexBus;return this.UARTbus[bus_name]={IDbus:new Serial,Used:!0},this.UARTbus[bus_name].IDbus.setup(_opt.baud,{rx:_opt.rx,tx:_opt.tx}),++this.IndexBus,{NameBus:bus_name,IDbus:this.UARTbus[bus_name].IDbus}}}exports=ClassBaseUARTBus;